// Generated by view binder compiler. Do not edit!
package com.example.truegg.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.truegg.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText CaloriesFood;

  @NonNull
  public final Button ViewButton;

  @NonNull
  public final EditText caloriesNum;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final Button submitButton;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull EditText CaloriesFood,
      @NonNull Button ViewButton, @NonNull EditText caloriesNum, @NonNull LinearLayout layout,
      @NonNull Button submitButton) {
    this.rootView = rootView;
    this.CaloriesFood = CaloriesFood;
    this.ViewButton = ViewButton;
    this.caloriesNum = caloriesNum;
    this.layout = layout;
    this.submitButton = submitButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CaloriesFood;
      EditText CaloriesFood = ViewBindings.findChildViewById(rootView, id);
      if (CaloriesFood == null) {
        break missingId;
      }

      id = R.id.ViewButton;
      Button ViewButton = ViewBindings.findChildViewById(rootView, id);
      if (ViewButton == null) {
        break missingId;
      }

      id = R.id.caloriesNum;
      EditText caloriesNum = ViewBindings.findChildViewById(rootView, id);
      if (caloriesNum == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.submitButton;
      Button submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, CaloriesFood, ViewButton,
          caloriesNum, layout, submitButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
